#####################################################################
#   Macros
#####################################################################

   
######################### PRINT START / END #########################

[gcode_macro PRINT_START]
# For setting the parameters as persistent variables so they can be referenced in PRINT_START2
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:      
    # Parameters
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}

    # Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}   
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend} 
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}   
    _RESETSPEEDS                                                                                         ; reset speed, accel etc to configured values    
    WLED_ON preset=2
    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=0 FUZZ_ENABLE=1
    SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
    M140 S{bed}                                                                                         ; set bed to target temp
    G28                                                                                                 ; home
    G90                                                                                                 ; absolute positioning
    {% if printer['temperature_sensor chamber'].temperature < chamber or printer.heater_bed.temperature < (bed-2)  %}                                ; - if chamber is not at temp yet:
         HEATSOAK T={bed} C={chamber} MOVE=1 WAIT=1                                                     ;   heatsoak macro + park in center
    {% else %}                                                                                          ; - if chamber is already at temp:
        HEATSOAK T={bed} C={chamber} MOVE=0 WAIT=1                                                      ;       "heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
    {% endif %} 
    M190 S{bed}                                                                                         ; wait for bed temp
    M109 S150                                                                                           ; Heats the nozzle to 150c
    _SWIPENOZZLE
    QUAD_GANTRY_LEVEL                                                                                   ; quad gantry level
    G28 Z                                                                                               ; home z
    G90                                                                                                 ; absolute positioning
    _SWIPENOZZLE
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE                                                                                  ; mesh
    G28 Z                                                                                               ; home z again
    G0 X100 Z10 Y{printer.toolhead.axis_maximum.y} F19500                                               ; move to right of nozzle brush
    M109 S{hotend}                                                                                      ; set & wait for hotend final temp
    CLEAN_NOZZLE                                                                                         ; clean nozzle while hot
    SET_FAN_SPEED FAN=nevermore SPEED=0.5                                                                ; set chamber fan to 50%
    WLED_ON preset=2
    G90
    G92 E0                                                                                              ; reset Extruder
    VORON_PURGE                                                                                         ; Does a fancy purge                                                

[gcode_macro PRINT_END]
gcode:                                                                                                   
    WLED_ON preset=3
    CLEAR_PAUSE                                                                                         ; clear pause (from M191) if there is one                                               
    M400                                                                                                ; wait for buffer to clear
    G92 E0                                                                                              ; zero the extruder
    G1 E-10.0 F3600                                                                                     ; retract 10mm
    M104 S0                                                                                             ; turn only the hotend off
    M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}                                              ; return the bed to temp, some slicers like to turn it off
    M107                                                                                                ; turn off part cooling fan
    G91                                                                                                 ; relative positioning
    G1 Z5 F3000                                                                                         ; move nozzle up 5mm
    G90                                                                                                 ; absolute positioning
    #G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0                  ; park nozzle at rear
    G1 X300 Y300 F19500.0                                                                               ; park nozzle at rear
    BED_MESH_CLEAR                                                                                      ; clear bed mesh                                    
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=600                                                    ; turn everything off in 10 min
    _RESETSPEEDS

[gcode_macro _SWIPENOZZLE]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=SWIPENOZZLE
    G90                                                             ; absolute positioning
    G0 X100 Z10 Y{printer.toolhead.axis_maximum.y} F19500           ; move to right of nozzle brush
    G0 Z3   F19500                                                  ; lower
    G0 X50 F2400                                                    ; wipe back
    G0 Z10  F19500                                                  ; raise
    RESTORE_GCODE_STATE NAME=SWIPENOZZLE
  
######################## PAUSE/RESUME/CANCEL #########################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE


[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume the print after an optional unretract
gcode:
    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}

    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={St}

    BASE_RESUME


[delayed_gcode DELAYED_OFF]
gcode:
    OFF                                                             ; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)
    WLED_ON preset=1
    

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

######################### MISC #########################

[gcode_macro COLD_PULL]
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(235) %}
    {% set PULLTEMP = params.PULLTEMP|default(80) %}
    G90
    M83
    G92 E0
    M109 S{EXTRUDER} 
    M104 S{PULLTEMP}
    M106 S120   #fan on
    G1 E5 F5
    M109 S{PULLTEMP}
    G1 E-15 F45
    G1 E-100 F300
    G92 E0
    M106 S0
    M104 S0
    M84


[gcode_macro _LOW_TEMP_CHECK]
description: Check the nozzle is at temperature and heat it if needed
gcode: 
    {% set T = params.T|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}

    {% if printer.extruder.target != 0 %}
        {% if printer.extruder.temperature < printer.extruder.target %}
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %}
        {% if printer.extruder.target < T %}
            M109 S{T}
        {% endif %}
    {% endif %}

# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


[gcode_macro _RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro G32]
gcode:
    G28
    #BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G28 Z

[gcode_macro HEATSOAK]
gcode:
    # Parameters
    {% set t = params.T|default(110)|int %}
    {% set c = params.C|default(75)|int %}
    {% set move = params.MOVE|default(1)|int %}
    {% set wait = params.WAIT|default(0)|int %}

    SAVE_GCODE_STATE NAME=HEATSOAK
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0    ; cancel off timer (if there is one)
    SET_FAN_SPEED FAN=nevermore SPEED=1.0            ; set chamber fan to 50%
    M104 S0                                           ; turn off hotend
    M140 S{t}                                         ; heat bed
    {% if move == 1 %}
        _CG28
        G90
        G0 Z{printer.toolhead.axis_maximum.z/2} F19500    
        G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F19500    
    {% endif %}
    {% if c > 30 and wait == 1 %}
        #TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={c-10} ; (TEST) wait for chamber temp - 10C
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={c-10} ; wait for chamber temp - 10C
    {% endif %}
    RESTORE_GCODE_STATE NAME=HEATSOAK


######################### FILAMENT #########################

[gcode_macro CHANGE_FILAMENT]
description: Do a PAUSE, park the toolhead over the purge bucket and unload the filament
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}

 	SAVE_GCODE_STATE NAME=CHANGE_FILAMENT_state
    PAUSE
    PARK
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=CHANGE_FILAMENT_state


[gcode_macro UNLOAD_FILAMENT]
description: Basic unload of the filament (used with M600/CHANGE_FILAMENT)
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

	SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
	_LOW_TEMP_CHECK T={TEMP}

    _TIP_SHAPING
    M83
    G1 E-20 F3600
    G4 P3000
    G1 E{DISTANCE|float * -1} F3000

	RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state


[gcode_macro LOAD_FILAMENT]
description: Basic load of the filament (used with M600/CHANGE_FILAMENT)
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

	SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
	_LOW_TEMP_CHECK T={TEMP}
    M83
	G92 E0
    G1 E{DISTANCE|float} F200
    G1 E50 F150
    
	G92 E0
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state


[gcode_macro _TIP_SHAPING]
description: Filament tip shaping sequence
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}

	SAVE_GCODE_STATE NAME=TIP_SHAPING_state
	_LOW_TEMP_CHECK T={TEMP}
    
    {% set old_pressure_advance = printer.extruder.pressure_advance|default(0) %} # old pressure advance
    # we suppress pressure advance
    SET_PRESSURE_ADVANCE ADVANCE=0

    M82
    G92 E0
    G1 E2 F3600
    G1 E0 F3600
    G1 E3 F3600
    G1 E0 F3600
    G1 E4 F3600
    G1 E0 F3600

    # set last pressure advance
    SET_PRESSURE_ADVANCE ADVANCE={old_pressure_advance}
	RESTORE_GCODE_STATE NAME=TIP_SHAPING_state

######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro _CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        ; _CG28
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}
    
######################### PARKING #########################

[gcode_macro PARK]
description: Park the toolhead at the back and retract some filament if the nozzle is hot
gcode:
    {% set E = params.E|default(1.7)|float %}

    {% set Px, Py = printer["gcode_macro _USER_VARIABLES_OTHER"].park_position_xy|map('float') %}
    {% set park_lift_z = printer["gcode_macro _USER_VARIABLES_OTHER"].park_lift_z %}

    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES_OTHER"].z_drop_speed * 60 %}

    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}

    {% set z_safe = act_z + park_lift_z %}
    {% if z_safe > max_z %}
        {% set z_safe = max_z %}
    {% endif %}

    # retract filament before move up toolhead
    {% if printer.extruder.temperature > 185 %}
        G10
    {% endif %}
    G90
    G1 Z{z_safe} F{Sz}

    G0 X{Px} Y{Py} F{St}

# Park front center
[gcode_macro PARKFRONT]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park top rear left
[gcode_macro PARKREAR]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500    
    RESTORE_GCODE_STATE NAME=PARKCENTER
    
# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=PARKBED
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKBED
    
######################### ALIASES/SHORTCUTS #########################

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
    M84                                             ; turn steppers off
    TURN_OFF_HEATERS                                ; turn bed / hotend off
    M107                                            ; turn print cooling fan off
    SET_FAN_SPEED FAN=nevermore SPEED=0               ; turn exhaust fan off